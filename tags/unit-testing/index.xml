<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Unit Testing on Jaeyeop&#39;s Notes</title>
    <link>https://jaeyeopme.github.io/tags/unit-testing/</link>
    <description>Recent content in Unit Testing on Jaeyeop&#39;s Notes</description>
    <image>
      <title>Jaeyeop&#39;s Notes</title>
      <url>https://jaeyeopme.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://jaeyeopme.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 27 Oct 2022 00:08:57 +0900</lastBuildDate><atom:link href="https://jaeyeopme.github.io/tags/unit-testing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>단위 테스트 1장</title>
      <link>https://jaeyeopme.github.io/posts/%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8-1%EC%9E%A5/</link>
      <pubDate>Thu, 27 Oct 2022 00:08:57 +0900</pubDate>
      
      <guid>https://jaeyeopme.github.io/posts/%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8-1%EC%9E%A5/</guid>
      <description>1. 단위 테스트의 목표 단위 테스트에 시간을 투자할 때는 항상 노력은 가능한 줄이며 이득을 최대화해야 한다. 단위 테스트에 노력을 많이 들여도 많은 버그와 유지비로 진행은 느려진다. 균형을 달성한 프로젝트는 유지보수가 많이 필요하지 않으며, 변화하는 요구에 신속히 대응할 수 있다.
1.1 단위 테스트 현황 단위 테스트를 적용해야 하는지는 더 이상 논쟁거리가 아니다. 기업용 애플리케이션은 거의 모두 자동화된 단위 테스트가 있고, 통합 테스트를 통해 좋은 커버리지를 달성하고 있다. 그러나 좋지 않은 테스트라면 새로운 기능 구현이 더 오래 걸리고, 새로운 버그가 나타나는 등 테스트가 오히려 상황을 더 나쁘게 할 수 있다.</description>
    </item>
    
  </channel>
</rss>
